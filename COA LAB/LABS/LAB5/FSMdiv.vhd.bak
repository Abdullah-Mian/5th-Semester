library ieee ;
use ieee . std_ logi c 1164 .all ;
use ieee . std_ logi c unsi gned .all ;

entity FSMdiv is port (
	clk : in std_ logic ;
	letstart : in std_logic ;
	remaind : out std_logic_ vector (3 downto 0);
	quot out std_logic_ vector (3 downto 0)
	); 
end FSMdiv;

architecture behav of FSMdiv is
	signal x : std logic vector (3 downto 0 ) := "1000" ; 
	signal y : std logic vector (3 downto 0 ) := "0011" ;
	signal q : std logic vector (3 downto 0 ) .- " 0000 " ; -- For Quotient - -

	constant initial : std_ logic_vector (2 downto 0) :="001" ;
	constant compute : std_ logic_vector (2 downto 0) :="010" ;
	constant done : std_ logic_vector (2 downto 0 ) :="100" ;

	-- This is our State Memory SM
	signal mystat e : std_ logic_ vector (2 down to 0 ) := "001" ;
		begin
			process (clk)
				begin
					if (clk 'event and clk= '1' ) then
						case mystate is
							--OFL
							when initial => 
								x <= "1000" ;--8
								y <= "0011" ; --3
							-- NSL
							if (letstart = '1' ) then
									mystate <= compute ;
							e1se
								mystate <= initial ;
							end if ;
								when compute =>
								--OFL
								if (x>=y ) then
									x <= x - y ;
									q <= q + 1 ;
									end if;	
							
							if (x>=y) then
								mystate <= compute ;
							else
								mystate <= done ;
							end if ;
							when done =>
								remaind <= x ;
								quol <= q ;
								--NSL
								mystate <=initial ;
							
							when others =>
								mystate <=initial ;
							end case ;
							end if ;
							end process ;
							end behav ;
							
							
							
							
							
							